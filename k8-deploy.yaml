# Creates frontend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels:
    app: frontend
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable : 20
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: 751732450123.dkr.ecr.us-east-1.amazonaws.com/frontend:{{APP_VERSION}}
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "300Mi"
            cpu: "200m"

---
#This should be Internal
apiVersion: v1
kind: Service
metadata:
  name: frontend-svc
spec:
  selector:
    app: frontend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80

---
# AutoScaling
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: frontend-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment   # This could be any scalable workload
    name: frontend
  minReplicas: 1     # Minimum number of replicas
  maxReplicas: 10     # Maximum number of replicas
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 75   # Target average CPU utilization percentage

--- 
# Ingress Report
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend-ingress
spec:
  ingressClassName: nginx
  rules:
    - host: "robo-frontend.robocart.shop"
      http:
        paths:
        - path: "/"
          pathType: Prefix
          backend:
            service:
              name: frontend-svc
              port:
                number: 80